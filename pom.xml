<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.garrett</groupId>
    <artifactId>webdemo</artifactId>
    <version>0.0.5</version>
    <packaging>war</packaging>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>web_demo</finalName>
        <sourceDirectory>src/main</sourceDirectory>
        <testSourceDirectory>src/test</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.22.1</version>
                <configuration>
                    <images>
                        <image>
                            <name>${project.name}:${project.version}</name>
                            <alias>GarrettDemo</alias>
                            <build>
                                <dockerFileDir>${project.basedir}/build</dockerFileDir>
                            </build>
                            <!--TODO: Add run docker image phase -->
                            <!--TODO: Add push docker image phases -->
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <!--                        -->
                    <!-- clean phase lifecycle  -->
                    <!--                        -->
                    <!-- 1. pre clean -->
                    <execution>
                        <id>id.pre-clean</id>
                        <phase>pre-clean</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                                <echo>pre-clean phase</echo>
                                <echo>${project.name}:${project.version}</echo>
                                <echo>${project.basedir}</echo>
                                <echo>${project.build.directory}</echo>
                                <echo>${project.build.outputDirectory}</echo>
                                <echo>${project.build.finalName}</echo>
                            </tasks>
                        </configuration>
                    </execution>
                    <!-- 2. clean -->
                    <execution>
                        <id>id.clean</id>
                        <phase>clean</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                                <echo>clean phase</echo>
                                <delete file="${project.basedir}/build/target_app/${build.finalName}.war"/>
                            </tasks>
                        </configuration>
                    </execution>
                    <!-- 3. post-clean -->
                    <execution>
                        <id>id.post-clean</id>
                        <phase>post-clean</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks><echo>post-clean phase</echo></tasks>
                        </configuration>
                    </execution>
                    <!--                        -->
                    <!-- Build phase lifecycle  -->
                    <!--                        -->
                    <!-- 1. validate-->
                    <execution>
                        <id>id.validate</id>
                        <phase>validate</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks><echo>validate phase</echo></tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>id.compile</id>
                        <phase>compile</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks><echo>compile phase</echo></tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>id.test</id>
                        <phase>test</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks><echo>test phase</echo></tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>id.</id>
                        <phase>package</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                                <echo>package phase</echo>
                                <copy file="${project.build.directory}/${build.finalName}.war" tofile="${project.basedir}/build/target_app/${build.finalName}.war"/>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>id.deploy</id>
                        <phase>deploy</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks><echo>deploy phase</echo></tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
